#include <stdio.h>

int main(void)
{
	int i; // 정수형 변수 i를 정의하지 않을 시 > error C2065: 'i': 선언되지 않은 식별자입니다. (변수는 사용 전에 선언되어야 함)
	int hap = 0;

	for (i = 1; i <= 10; i = i + 1)
	{
		hap = hap + i; // 세미콜론을 붙이지 않을 시 > error C2143: 구문 오류: ';'이(가) '}' 앞에 없습니다. (for문을 종료하기 전에 세미콜론이 있어야 함)
	}

	printf("1부터 10까지의 합 : %d", hap);
}

/*
- 컴파일 개념
컴파일러는 프로그래머가 입력한 코드에 에러가 있는지 여부를 검색하여 목적 코드를 생성하는 역할을 한다.
목적 코드는 링커라는 프로그램에 의해 실행 가능한 프로그램으로 변환되며, 소스 코드는 다음 과정에 의해 실행 가능한 프로그램으로 바뀐다.
>> 소스코드 > 컴파일러 > 목적 코드 > 링커 > 실행 가능한 프로그램 (exe 프로그램)

- 소스 코드가 실행 파일로 변형되는 과정
>> 소스 코드(10.c) > 컴파일러 > 10.obj 파일 생성 > 링커 > 10.exe 생성

- 세미콜론 : 세미콜론은 대부분의 경우에 사용되지만 예외가 있다.
1. #include 문 사용 시.
2. #define 문 사용 시.
3. main() 함수 사용 시.
4. if( 조건식 ) 사용 시.
5. for(초기식; 조건식; 증감식) 사용 시.
6. {, } 사용 시.
>> 세미콜론의 사용 유무에 관해서는 특별한 규칙이 있다. > 나중에 배워용 ㅅㄱ

- printf() 함수의 링크
printf() 함수는 화면(모니터)에 무엇인가를 출력하기 위해 사용되는데 이 함수 또한 링커에 의해 각각의 프로그램에 합쳐진다.
printf() 함수 등을 런타임 라이브러리라고 하며, printf() 함수 외에도 수많은 내장 함수들이 존재한다. (문자열, 파일 처리, 시간 관련 함수 등등)

- C 프로그래밍 개발 과정
1단계) 에디터를 사용하여 소스 코드를 입력. C 소스 코드 파일은 .C라는 확장자를 갖게 됨.
2단계) 컴파일러를 사용하여 프로그램을 컴파일. 에러가 없을 경우에 컴파일러는 오브젝터 파일을 생성하고, 컴파일러에 의해 생성되는 파일은 .OBJ의 확장자를 가지며, 파일명은 소스 코드와 동일하다.
3단계) 링커를 사용하여 프로그램을 링크한다. 아무런 에러가 발생하지 않았다면 링커는 오브젝트 파일과 동일한 파일명을 가지며, .EXE 확장자를 가진 실행 가능한 프로그램을 생성하여 파일로 저장한다.
4단계) 프로그램을 실행한다. 프로그래머는 생성된 프로그램이 바르게 동작하는지 알아보기 위해서 결과를 확인해야 한다.
*/